// Code generated by MockGen. DO NOT EDIT.
// Source: marshaller.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockClientMarshalerInterface is a mock of ClientMarshalerInterface interface
type MockClientMarshalerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientMarshalerInterfaceMockRecorder
}

// MockClientMarshalerInterfaceMockRecorder is the mock recorder for MockClientMarshalerInterface
type MockClientMarshalerInterfaceMockRecorder struct {
	mock *MockClientMarshalerInterface
}

// NewMockClientMarshalerInterface creates a new mock instance
func NewMockClientMarshalerInterface(ctrl *gomock.Controller) *MockClientMarshalerInterface {
	mock := &MockClientMarshalerInterface{ctrl: ctrl}
	mock.recorder = &MockClientMarshalerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClientMarshalerInterface) EXPECT() *MockClientMarshalerInterfaceMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockClientMarshalerInterface) Get(key string, returnObj interface{}) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", key, returnObj)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockClientMarshalerInterfaceMockRecorder) Get(key, returnObj interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockClientMarshalerInterface)(nil).Get), key, returnObj)
}

// Set mocks base method
func (m *MockClientMarshalerInterface) Set(key string, object interface{}, expiration time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", key, object, expiration)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set
func (mr *MockClientMarshalerInterfaceMockRecorder) Set(key, object, expiration interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockClientMarshalerInterface)(nil).Set), key, object, expiration)
}
